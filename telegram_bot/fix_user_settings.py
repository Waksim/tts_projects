"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ —Ç–∞–±–ª–∏—Ü–µ user_settings.
–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å NULL.

–ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è:
python fix_user_settings.py
"""

import sqlite3
import sys
from pathlib import Path

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_PATH = Path(__file__).parent / "bot_history.db"

# –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ config.py
DEFAULT_VOICE = "ru-RU-DmitryNeural"
DEFAULT_RATE = "+50%"


def fix_user_settings():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–ø–∏—Å–∏ user_settings, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è NULL –ø–æ–ª–µ–π."""
    if not DB_PATH.exists():
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {DB_PATH}")
        print("–°–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–Ω–∞—á–∞–ª–∞, –∑–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç–∞.")
        sys.exit(1)

    conn = sqlite3.connect(DB_PATH)
    cursor = conn.cursor()

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ user_settings
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='user_settings'")
        if not cursor.fetchone():
            print("‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü–∞ user_settings –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –°–∫—Ä–∏–ø—Ç –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
            return

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π —Å NULL –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        cursor.execute("""
            SELECT COUNT(*) FROM user_settings
            WHERE speech_rate IS NULL OR speech_rate = '' OR voice_name IS NULL OR voice_name = ''
        """)
        count_to_fix = cursor.fetchone()[0]

        if count_to_fix == 0:
            print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ user_settings –∏–º–µ—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
            return

        print(f"üîß –ù–∞–π–¥–µ–Ω–æ {count_to_fix} –∑–∞–ø–∏—Å–µ–π —Å NULL –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –ù–∞—á–∏–Ω–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...")

        # –û–±–Ω–æ–≤–ª—è–µ–º speech_rate –¥–ª—è –∑–∞–ø–∏—Å–µ–π –≥–¥–µ –æ–Ω NULL –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        cursor.execute("""
            UPDATE user_settings
            SET speech_rate = ?
            WHERE speech_rate IS NULL OR speech_rate = ''
        """, (DEFAULT_RATE,))
        updated_rate = cursor.rowcount
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ speech_rate: {updated_rate} –∑–∞–ø–∏—Å–µ–π")

        # –û–±–Ω–æ–≤–ª—è–µ–º voice_name –¥–ª—è –∑–∞–ø–∏—Å–µ–π –≥–¥–µ –æ–Ω NULL –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        cursor.execute("""
            UPDATE user_settings
            SET voice_name = ?
            WHERE voice_name IS NULL OR voice_name = ''
        """, (DEFAULT_VOICE,))
        updated_voice = cursor.rowcount
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ voice_name: {updated_voice} –∑–∞–ø–∏—Å–µ–π")

        conn.commit()
        print("‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞–ø–∏—Å–µ–π: {max(updated_rate, updated_voice)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        cursor.execute("SELECT COUNT(*) FROM user_settings")
        total_records = cursor.fetchone()[0]
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ user_settings:")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_records}")

        cursor.execute("SELECT COUNT(*) FROM user_settings WHERE speech_rate = ?", (DEFAULT_RATE,))
        default_rate_count = cursor.fetchone()[0]
        print(f"   –ó–∞–ø–∏—Å–µ–π —Å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é ({DEFAULT_RATE}): {default_rate_count}")

        cursor.execute("SELECT COUNT(*) FROM user_settings WHERE voice_name = ?", (DEFAULT_VOICE,))
        default_voice_count = cursor.fetchone()[0]
        print(f"   –ó–∞–ø–∏—Å–µ–π —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º –≥–æ–ª–æ—Å–æ–º ({DEFAULT_VOICE}): {default_voice_count}")

    except Exception as e:
        conn.rollback()
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–µ–π: {e}")
        sys.exit(1)
    finally:
        conn.close()


if __name__ == "__main__":
    print("üîß –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è user_settings...\n")
    fix_user_settings()
