"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è Telegram Bot
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import OWNER_ID


def get_main_menu_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å inline –∫–Ω–æ–ø–∫–∞–º–∏.

    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞)

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤ (–¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º)
    keyboard.append([
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="add_channel"),
        InlineKeyboardButton(text="üì¢ –ú–æ–∏ –∫–∞–Ω–∞–ª—ã", callback_data="my_channels")
    ])

    keyboard.append([
        InlineKeyboardButton(text="üîä –û–∑–≤—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã", callback_data="voice_new")
    ])

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —á–∞—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞)
    if user_id == OWNER_ID:
        keyboard.append([
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —á–∞—Ç", callback_data="add_chat"),
            InlineKeyboardButton(text="üí¨ –ú–æ–∏ —á–∞—Ç—ã", callback_data="my_chats")
        ])

    # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞
    keyboard.append([
        InlineKeyboardButton(text="üé§ –í—ã–±–æ—Ä –≥–æ–ª–æ—Å–∞", callback_data="select_voice")
    ])

    keyboard.append([
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
        InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_back_button_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥".

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥"
    """
    keyboard = [[InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")]]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_posts_count_keyboard(channel_username: str) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å—Ç–æ–≤.

    Args:
        channel_username: Username –∫–∞–Ω–∞–ª–∞

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    """
    counts = [1, 2, 5, 10, 30]

    keyboard = []

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–∞–º–∏
    row = []
    for count in counts:
        row.append(InlineKeyboardButton(
            text=str(count),
            callback_data=f"voice_channel:{channel_username}:{count}"
        ))
    keyboard.append(row)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="my_channels")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_my_channels_keyboard(channels: list) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–∞–Ω–∞–ª–æ–≤.

    Args:
        channels: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –ë–î

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∫–∞–Ω–∞–ª–æ–≤
    """
    keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    for channel in channels:
        keyboard.append([
            InlineKeyboardButton(
                text=f"üì¢ {channel.channel_title}",
                callback_data=f"channel:{channel.channel_username}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_messages_count_keyboard(chat_id: int) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞.

    Args:
        chat_id: ID —á–∞—Ç–∞

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    """
    counts = [1, 2, 5, 10, 30]

    keyboard = []

    # –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–∞–º–∏
    row = []
    for count in counts:
        row.append(InlineKeyboardButton(
            text=str(count),
            callback_data=f"voice_chat:{chat_id}:{count}"
        ))
    keyboard.append(row)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="my_chats")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_my_chats_keyboard(chats: list) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —á–∞—Ç–æ–≤.

    Args:
        chats: –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —á–∞—Ç–æ–≤ –∏–∑ –ë–î

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ —á–∞—Ç–æ–≤
    """
    keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
    for chat in chats:
        keyboard.append([
            InlineKeyboardButton(
                text=f"üí¨ {chat.chat_title}",
                callback_data=f"chat:{chat.chat_id}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_voice_selection_keyboard() -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–∞.

    Returns:
        InlineKeyboardMarkup —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ –≥–æ–ª–æ—Å–æ–≤
    """
    from config import AVAILABLE_VOICES

    keyboard = []

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥–æ–ª–æ—Å–∞
    for voice_id, voice_info in AVAILABLE_VOICES.items():
        keyboard.append([
            InlineKeyboardButton(
                text=voice_info["name"],
                callback_data=f"set_voice:{voice_id}"
            )
        ])

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


